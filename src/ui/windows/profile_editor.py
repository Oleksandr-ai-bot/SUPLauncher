from PySide6.QtCore import Qt, Signal, QSize
from PySide6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel,
                               QLineEdit, QComboBox, QSpinBox, QCheckBox,
                               QGroupBox, QFrame, QPushButton, QFileDialog,
                               QTextEdit, QTabWidget, QWidget, QMessageBox,
                               QSlider, QFormLayout)
from PySide6.QtGui import QIcon, QFont, QPixmap

from core.config import COLORS, UI, FONTS
from core.paths import Paths
from models.profile import Profile
from ui.components.animated_button import AnimatedButton


class ProfileEditor(QDialog):
    """–†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ—Ñ–∏–ª—è Minecraft"""

    # –°–∏–≥–Ω–∞–ª—ã
    profileSaved = Signal(object)  # Profile –æ–±—ä–µ–∫—Ç

    def __init__(self, profile: Profile = None, parent=None):
        super().__init__(parent, Qt.WindowTitleHint | Qt.WindowCloseButtonHint)
        self.paths = Paths()
        self.profile = profile or Profile()
        self.is_new_profile = profile is None

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞
        self.setWindowTitle("–ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å" if self.is_new_profile else f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {self.profile.name}")
        self.setModal(True)
        self.setMinimumSize(500, 600)
        self.resize(600, 700)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        self._init_ui()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ UI
        if not self.is_new_profile:
            self._load_profile_to_ui()

    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        self.layout = QVBoxLayout(self)
        self.layout.setContentsMargins(UI["padding_large"], UI["padding_large"],
                                       UI["padding_large"], UI["padding_large"])
        self.layout.setSpacing(UI["spacing_large"])

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = QLabel("–ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å" if self.is_new_profile else "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")
        self.title_label.setStyleSheet(f"""
            color: {COLORS['text_primary']};
            font-family: "{FONTS['secondary']}";
            font-size: {FONTS['sizes']['xl']}px;
            font-weight: bold;
        """)

        # –í–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.tab_widget = QTabWidget()
        self.tab_widget.setStyleSheet(f"""
            QTabWidget::pane {{
                border: 1px solid {COLORS['border_light']};
                background-color: {COLORS['bg_secondary']};
                border-radius: 8px;
            }}
            QTabBar::tab {{
                background-color: {COLORS['bg_primary']};
                color: {COLORS['text_secondary']};
                padding: 8px 16px;
                margin-right: 2px;
                border-top-left-radius: 6px;
                border-top-right-radius: 6px;
            }}
            QTabBar::tab:selected {{
                background-color: {COLORS['bg_secondary']};
                color: {COLORS['text_primary']};
                border-bottom: 2px solid {COLORS['accent_primary']};
            }}
            QTabBar::tab:hover:!selected {{
                background-color: {COLORS['bg_tertiary']};
                color: {COLORS['text_primary']};
            }}
        """)

        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        self._create_general_tab()
        self._create_version_tab()
        self._create_java_tab()
        self._create_game_tab()

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        self.buttons_container = QWidget()
        self.buttons_layout = QHBoxLayout(self.buttons_container)
        self.buttons_layout.setContentsMargins(0, 0, 0, 0)
        self.buttons_layout.setSpacing(UI["spacing_medium"])

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        self.cancel_button = AnimatedButton("–û—Ç–º–µ–Ω–∞")
        self.cancel_button.setMinimumHeight(UI["button_height"])
        self.cancel_button.clicked.connect(self.reject)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        self.save_button = AnimatedButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.save_button.set_accent_color(COLORS["accent_primary"])
        self.save_button.setMinimumHeight(UI["button_height"])
        self.save_button.clicked.connect(self._save_and_close)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self.buttons_layout.addStretch(1)
        self.buttons_layout.addWidget(self.cancel_button)
        self.buttons_layout.addWidget(self.save_button)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        self.layout.addWidget(self.title_label)
        self.layout.addWidget(self.tab_widget, 1)
        self.layout.addWidget(self.buttons_container)

    def _create_general_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –æ–±—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        tab = QWidget()
        layout = QVBoxLayout(tab)
        layout.setContentsMargins(UI["padding_medium"], UI["padding_medium"],
                                  UI["padding_medium"], UI["padding_medium"])
        layout.setSpacing(UI["spacing_medium"])

        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_group = QGroupBox("–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        info_group.setStyleSheet(self._get_group_style())
        info_layout = QFormLayout(info_group)
        info_layout.setSpacing(UI["spacing_small"])

        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        self.name_input = QLineEdit()
        self.name_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")
        self.name_input.setStyleSheet(self._get_input_style())
        info_layout.addRow("–ù–∞–∑–≤–∞–Ω–∏–µ:", self.name_input)

        # –û–ø–∏—Å–∞–Ω–∏–µ
        self.description_input = QTextEdit()
        self.description_input.setMaximumHeight(80)
        self.description_input.setPlaceholderText("–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
        self.description_input.setStyleSheet(f"""
            QTextEdit {{
                background-color: {COLORS['bg_primary']};
                border: 1px solid {COLORS['border_light']};
                border-radius: 6px;
                padding: 8px;
                color: {COLORS['text_primary']};
            }}
            QTextEdit:focus {{
                border: 2px solid {COLORS['accent_primary']};
            }}
        """)
        info_layout.addRow("–û–ø–∏—Å–∞–Ω–∏–µ:", self.description_input)

        # –ò–∫–æ–Ω–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
        icon_container = QWidget()
        icon_layout = QHBoxLayout(icon_container)
        icon_layout.setContentsMargins(0, 0, 0, 0)
        icon_layout.setSpacing(UI["spacing_small"])

        self.icon_combo = QComboBox()
        self.icon_combo.addItems(["–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é", "Forge", "Fabric", "Vanilla", "–ú–æ–¥–ø–∞–∫"])
        self.icon_combo.setStyleSheet(self._get_combo_style())

        self.icon_preview = QLabel()
        self.icon_preview.setFixedSize(32, 32)
        self.icon_preview.setStyleSheet(f"""
            border: 1px solid {COLORS['border_light']};
            border-radius: 4px;
            background-color: {COLORS['bg_primary']};
        """)
        self.icon_preview.setAlignment(Qt.AlignCenter)
        self.icon_preview.setText("üì¶")  # –≠–º–æ–¥–∑–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        icon_layout.addWidget(self.icon_combo, 1)
        icon_layout.addWidget(self.icon_preview)

        info_layout.addRow("–ò–∫–æ–Ω–∫–∞:", icon_container)

        # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–≥—Ä—ã
        game_dir_container = QWidget()
        game_dir_layout = QHBoxLayout(game_dir_container)
        game_dir_layout.setContentsMargins(0, 0, 0, 0)
        game_dir_layout.setSpacing(UI["spacing_small"])

        self.game_dir_input = QLineEdit()
        self.game_dir_input.setPlaceholderText("–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)")
        self.game_dir_input.setStyleSheet(self._get_input_style())

        self.browse_button = QPushButton("–û–±–∑–æ—Ä...")
        self.browse_button.setMinimumHeight(32)
        self.browse_button.clicked.connect(self._browse_game_directory)

        game_dir_layout.addWidget(self.game_dir_input, 1)
        game_dir_layout.addWidget(self.browse_button)

        info_layout.addRow("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–≥—Ä—ã:", game_dir_container)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ layout
        layout.addWidget(info_group)
        layout.addStretch(1)

        self.tab_widget.addTab(tab, "–û–±—â–∏–µ")

    def _create_version_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –≤–µ—Ä—Å–∏–∏"""
        tab = QWidget()
        layout = QVBoxLayout(tab)
        layout.setContentsMargins(UI["padding_medium"], UI["padding_medium"],
                                  UI["padding_medium"], UI["padding_medium"])
        layout.setSpacing(UI["spacing_medium"])

        # –í–µ—Ä—Å–∏—è Minecraft
        version_group = QGroupBox("–í–µ—Ä—Å–∏—è Minecraft")
        version_group.setStyleSheet(self._get_group_style())
        version_layout = QFormLayout(version_group)
        version_layout.setSpacing(UI["spacing_small"])

        self.version_combo = QComboBox()
        self.version_combo.setEditable(True)
        self.version_combo.setStyleSheet(self._get_combo_style())

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
        versions = ["1.20.1", "1.19.4", "1.18.2", "1.17.1", "1.16.5", "1.15.2", "1.14.4", "1.12.2"]
        self.version_combo.addItems(versions)

        version_layout.addRow("–í–µ—Ä—Å–∏—è:", self.version_combo)

        # –ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥–æ–≤
        loader_group = QGroupBox("–ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥–æ–≤")
        loader_group.setStyleSheet(self._get_group_style())
        loader_layout = QVBoxLayout(loader_group)
        loader_layout.setSpacing(UI["spacing_small"])

        # –¢–∏–ø –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        loader_type_container = QWidget()
        loader_type_layout = QHBoxLayout(loader_type_container)
        loader_type_layout.setContentsMargins(0, 0, 0, 0)
        loader_type_layout.setSpacing(UI["spacing_medium"])

        self.vanilla_radio = QCheckBox("Vanilla (–±–µ–∑ –º–æ–¥–æ–≤)")
        self.forge_radio = QCheckBox("Forge")
        self.fabric_radio = QCheckBox("Fabric")

        # –î–µ–ª–∞–µ–º —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏ –≤–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–∞—é—â–∏–º–∏
        self.vanilla_radio.toggled.connect(lambda checked: self._on_loader_changed("vanilla", checked))
        self.forge_radio.toggled.connect(lambda checked: self._on_loader_changed("forge", checked))
        self.fabric_radio.toggled.connect(lambda checked: self._on_loader_changed("fabric", checked))

        for radio in [self.vanilla_radio, self.forge_radio, self.fabric_radio]:
            radio.setStyleSheet(self._get_checkbox_style())

        loader_type_layout.addWidget(self.vanilla_radio)
        loader_type_layout.addWidget(self.forge_radio)
        loader_type_layout.addWidget(self.fabric_radio)
        loader_type_layout.addStretch(1)

        # –í–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        self.loader_version_combo = QComboBox()
        self.loader_version_combo.setEditable(True)
        self.loader_version_combo.setEnabled(False)
        self.loader_version_combo.setStyleSheet(self._get_combo_style())

        loader_layout.addWidget(loader_type_container)
        loader_layout.addWidget(QLabel("–í–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞:"))
        loader_layout.addWidget(self.loader_version_combo)

        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±–∏—Ä–∞–µ–º Vanilla
        self.vanilla_radio.setChecked(True)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ layout
        layout.addWidget(version_group)
        layout.addWidget(loader_group)
        layout.addStretch(1)

        self.tab_widget.addTab(tab, "–í–µ—Ä—Å–∏—è")

    def _create_java_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Java"""
        tab = QWidget()
        layout = QVBoxLayout(tab)
        layout.setContentsMargins(UI["padding_medium"], UI["padding_medium"],
                                  UI["padding_medium"], UI["padding_medium"])
        layout.setSpacing(UI["spacing_medium"])

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Java
        java_group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Java")
        java_group.setStyleSheet(self._get_group_style())
        java_layout = QFormLayout(java_group)
        java_layout.setSpacing(UI["spacing_small"])

        # –ü—É—Ç—å –∫ Java
        java_path_container = QWidget()
        java_path_layout = QHBoxLayout(java_path_container)
        java_path_layout.setContentsMargins(0, 0, 0, 0)
        java_path_layout.setSpacing(UI["spacing_small"])

        self.java_path_input = QLineEdit()
        self.java_path_input.setPlaceholderText("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ")
        self.java_path_input.setStyleSheet(self._get_input_style())

        self.java_browse_button = QPushButton("–û–±–∑–æ—Ä...")
        self.java_browse_button.setMinimumHeight(32)
        self.java_browse_button.clicked.connect(self._browse_java_path)

        java_path_layout.addWidget(self.java_path_input, 1)
        java_path_layout.addWidget(self.java_browse_button)

        java_layout.addRow("–ü—É—Ç—å –∫ Java:", java_path_container)

        # JVM –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        self.jvm_args_input = QLineEdit()
        self.jvm_args_input.setPlaceholderText("-XX:+UnlockExperimentalVMOptions -XX:+UseG1GC")
        self.jvm_args_input.setStyleSheet(self._get_input_style())
        java_layout.addRow("JVM –∞—Ä–≥—É–º–µ–Ω—Ç—ã:", self.jvm_args_input)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–º—è—Ç–∏
        memory_group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–º—è—Ç–∏")
        memory_group.setStyleSheet(self._get_group_style())
        memory_layout = QVBoxLayout(memory_group)
        memory_layout.setSpacing(UI["spacing_medium"])

        # –°–ª–∞–π–¥–µ—Ä –ø–∞–º—è—Ç–∏
        memory_slider_container = QWidget()
        memory_slider_layout = QVBoxLayout(memory_slider_container)
        memory_slider_layout.setSpacing(UI["spacing_small"])

        self.memory_label = QLabel("–í—ã–¥–µ–ª—è–µ–º–∞—è –ø–∞–º—è—Ç—å: 4 GB")
        self.memory_label.setStyleSheet(f"""
            color: {COLORS['text_primary']};
            font-weight: bold;
        """)

        self.memory_slider = QSlider(Qt.Horizontal)
        self.memory_slider.setMinimum(1024)  # 1 GB
        self.memory_slider.setMaximum(16384)  # 16 GB
        self.memory_slider.setValue(4096)  # 4 GB –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.memory_slider.setTickPosition(QSlider.TicksBelow)
        self.memory_slider.setTickInterval(1024)
        self.memory_slider.valueChanged.connect(self._on_memory_changed)

        memory_slider_layout.addWidget(self.memory_label)
        memory_slider_layout.addWidget(self.memory_slider)

        # –¢–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        precise_memory_container = QWidget()
        precise_memory_layout = QHBoxLayout(precise_memory_container)
        precise_memory_layout.setContentsMargins(0, 0, 0, 0)
        precise_memory_layout.setSpacing(UI["spacing_medium"])

        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å
        min_memory_container = QWidget()
        min_memory_layout = QVBoxLayout(min_memory_container)
        min_memory_layout.setContentsMargins(0, 0, 0, 0)
        min_memory_layout.setSpacing(2)

        min_memory_label = QLabel("–ú–∏–Ω–∏–º—É–º (MB):")
        min_memory_label.setStyleSheet(f"color: {COLORS['text_secondary']};")

        self.min_memory_spinbox = QSpinBox()
        self.min_memory_spinbox.setMinimum(512)
        self.min_memory_spinbox.setMaximum(32768)
        self.min_memory_spinbox.setValue(2048)
        self.min_memory_spinbox.setSuffix(" MB")

        min_memory_layout.addWidget(min_memory_label)
        min_memory_layout.addWidget(self.min_memory_spinbox)

        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å
        max_memory_container = QWidget()
        max_memory_layout = QVBoxLayout(max_memory_container)
        max_memory_layout.setContentsMargins(0, 0, 0, 0)
        max_memory_layout.setSpacing(2)

        max_memory_label = QLabel("–ú–∞–∫—Å–∏–º—É–º (MB):")
        max_memory_label.setStyleSheet(f"color: {COLORS['text_secondary']};")

        self.max_memory_spinbox = QSpinBox()
        self.max_memory_spinbox.setMinimum(1024)
        self.max_memory_spinbox.setMaximum(32768)
        self.max_memory_spinbox.setValue(4096)
        self.max_memory_spinbox.setSuffix(" MB")
        self.max_memory_spinbox.valueChanged.connect(self._on_max_memory_changed)

        max_memory_layout.addWidget(max_memory_label)
        max_memory_layout.addWidget(self.max_memory_spinbox)

        precise_memory_layout.addWidget(min_memory_container)
        precise_memory_layout.addWidget(max_memory_container)
        precise_memory_layout.addStretch(1)

        memory_layout.addWidget(memory_slider_container)
        memory_layout.addWidget(precise_memory_container)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ layout
        layout.addWidget(java_group)
        layout.addWidget(memory_group)
        layout.addStretch(1)

        self.tab_widget.addTab(tab, "Java")

    def _create_game_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        tab = QWidget()
        layout = QVBoxLayout(tab)
        layout.setContentsMargins(UI["padding_medium"], UI["padding_medium"],
                                  UI["padding_medium"], UI["padding_medium"])
        layout.setSpacing(UI["spacing_medium"])

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
        window_group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞")
        window_group.setStyleSheet(self._get_group_style())
        window_layout = QFormLayout(window_group)
        window_layout.setSpacing(UI["spacing_small"])

        # –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
        self.fullscreen_checkbox = QCheckBox("–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º")
        self.fullscreen_checkbox.setStyleSheet(self._get_checkbox_style())
        self.fullscreen_checkbox.toggled.connect(self._on_fullscreen_changed)
        window_layout.addRow(self.fullscreen_checkbox)

        # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –æ–∫–Ω–∞
        resolution_container = QWidget()
        resolution_layout = QHBoxLayout(resolution_container)
        resolution_layout.setContentsMargins(0, 0, 0, 0)
        resolution_layout.setSpacing(UI["spacing_small"])

        self.width_spinbox = QSpinBox()
        self.width_spinbox.setMinimum(640)
        self.width_spinbox.setMaximum(7680)
        self.width_spinbox.setValue(854)
        self.width_spinbox.setSuffix(" px")

        x_label = QLabel("√ó")
        x_label.setAlignment(Qt.AlignCenter)
        x_label.setStyleSheet(f"color: {COLORS['text_secondary']};")

        self.height_spinbox = QSpinBox()
        self.height_spinbox.setMinimum(480)
        self.height_spinbox.setMaximum(4320)
        self.height_spinbox.setValue(480)
        self.height_spinbox.setSuffix(" px")

        # –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        resolution_presets_container = QWidget()
        resolution_presets_layout = QHBoxLayout(resolution_presets_container)
        resolution_presets_layout.setContentsMargins(0, 0, 0, 0)
        resolution_presets_layout.setSpacing(4)

        presets = [
            ("854√ó480", 854, 480),
            ("1280√ó720", 1280, 720),
            ("1920√ó1080", 1920, 1080),
            ("2560√ó1440", 2560, 1440)
        ]

        for name, width, height in presets:
            preset_button = QPushButton(name)
            preset_button.setMaximumHeight(24)
            preset_button.clicked.connect(lambda checked, w=width, h=height: self._set_resolution(w, h))
            preset_button.setStyleSheet(f"""
                QPushButton {{
                    background-color: {COLORS['bg_tertiary']};
                    border: 1px solid {COLORS['border_light']};
                    border-radius: 4px;
                    padding: 2px 6px;
                    font-size: 10px;
                }}
                QPushButton:hover {{
                    background-color: {COLORS['accent_primary']};
                }}
            """)
            resolution_presets_layout.addWidget(preset_button)

        resolution_presets_layout.addStretch(1)

        resolution_layout.addWidget(self.width_spinbox)
        resolution_layout.addWidget(x_label)
        resolution_layout.addWidget(self.height_spinbox)
        resolution_layout.addStretch(1)

        self.resolution_container = QWidget()
        resolution_main_layout = QVBoxLayout(self.resolution_container)
        resolution_main_layout.setContentsMargins(0, 0, 0, 0)
        resolution_main_layout.setSpacing(4)
        resolution_main_layout.addWidget(resolution_container)
        resolution_main_layout.addWidget(resolution_presets_container)

        window_layout.addRow("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ:", self.resolution_container)

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        extra_group = QGroupBox("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        extra_group.setStyleSheet(self._get_group_style())
        extra_layout = QVBoxLayout(extra_group)
        extra_layout.setSpacing(UI["spacing_small"])

        # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
        self.auto_join_checkbox = QCheckBox("–ê–≤—Ç–æ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        self.auto_join_checkbox.setEnabled(False)
        self.auto_join_checkbox.setStyleSheet(self._get_checkbox_style())

        # –°–µ—Ä–≤–µ—Ä –¥–ª—è –∞–≤—Ç–æ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        self.server_input = QLineEdit()
        self.server_input.setPlaceholderText("IP —Å–µ—Ä–≤–µ—Ä–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        self.server_input.setEnabled(False)
        self.server_input.setStyleSheet(self._get_input_style())

        extra_layout.addWidget(self.auto_join_checkbox)
        extra_layout.addWidget(self.server_input)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ layout
        layout.addWidget(window_group)
        layout.addWidget(extra_group)
        layout.addStretch(1)

        self.tab_widget.addTab(tab, "–ò–≥—Ä–∞")

    def _load_profile_to_ui(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –≤ —ç–ª–µ–º–µ–Ω—Ç—ã UI"""
        # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        self.name_input.setText(self.profile.name)
        if hasattr(self.profile, 'description'):
            self.description_input.setPlainText(self.profile.custom_settings.get('description', ''))

        # –í–µ—Ä—Å–∏—è
        self.version_combo.setCurrentText(self.profile.version_id)

        # –ó–∞–≥—Ä—É–∑—á–∏–∫
        if self.profile.loader_type == "forge":
            self.forge_radio.setChecked(True)
        elif self.profile.loader_type == "fabric":
            self.fabric_radio.setChecked(True)
        else:
            self.vanilla_radio.setChecked(True)

        if self.profile.loader_version:
            self.loader_version_combo.setCurrentText(self.profile.loader_version)

        # Java –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if self.profile.java_path:
            self.java_path_input.setText(self.profile.java_path)
        if self.profile.java_args:
            self.jvm_args_input.setText(self.profile.java_args)

        # –ü–∞–º—è—Ç—å
        self.min_memory_spinbox.setValue(self.profile.min_ram)
        self.max_memory_spinbox.setValue(self.profile.max_ram)
        self.memory_slider.setValue(self.profile.max_ram)
        self._on_memory_changed(self.profile.max_ram)

        # –ò–≥—Ä–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.fullscreen_checkbox.setChecked(self.profile.fullscreen)
        self.width_spinbox.setValue(self.profile.resolution_width)
        self.height_spinbox.setValue(self.profile.resolution_height)
        self._on_fullscreen_changed(self.profile.fullscreen)

        # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–≥—Ä—ã
        if self.profile.game_directory:
            self.game_dir_input.setText(self.profile.game_directory)

    def _save_profile_from_ui(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ UI –≤ –ø—Ä–æ—Ñ–∏–ª—å"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        if not self.name_input.text().strip():
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            return False

        # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        self.profile.name = self.name_input.text().strip()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ custom_settings
        description = self.description_input.toPlainText().strip()
        if description:
            self.profile.custom_settings['description'] = description
        elif 'description' in self.profile.custom_settings:
            del self.profile.custom_settings['description']

        # –í–µ—Ä—Å–∏—è
        self.profile.version_id = self.version_combo.currentText()

        # –ó–∞–≥—Ä—É–∑—á–∏–∫
        if self.forge_radio.isChecked():
            self.profile.loader_type = "forge"
        elif self.fabric_radio.isChecked():
            self.profile.loader_type = "fabric"
        else:
            self.profile.loader_type = None

        if self.loader_version_combo.currentText():
            self.profile.loader_version = self.loader_version_combo.currentText()
        else:
            self.profile.loader_version = None

        # Java –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.profile.java_path = self.java_path_input.text().strip() or None
        self.profile.java_args = self.jvm_args_input.text().strip()

        # –ü–∞–º—è—Ç—å
        self.profile.min_ram = self.min_memory_spinbox.value()
        self.profile.max_ram = self.max_memory_spinbox.value()

        # –ò–≥—Ä–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.profile.fullscreen = self.fullscreen_checkbox.isChecked()
        self.profile.resolution_width = self.width_spinbox.value()
        self.profile.resolution_height = self.height_spinbox.value()

        # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–≥—Ä—ã
        self.profile.game_directory = self.game_dir_input.text().strip() or None

        return True

    def _save_and_close(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞"""
        if self._save_profile_from_ui():
            if self.profile.save():
                self.profileSaved.emit(self.profile)
                self.accept()
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")

    def _on_loader_changed(self, loader_type: str, checked: bool):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞"""
        if checked:
            # –û—Ç–∫–ª—é—á–∞–µ–º –¥—Ä—É–≥–∏–µ —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏
            if loader_type != "vanilla":
                self.vanilla_radio.setChecked(False)
            if loader_type != "forge":
                self.forge_radio.setChecked(False)
            if loader_type != "fabric":
                self.fabric_radio.setChecked(False)

            # –í–∫–ª—é—á–∞–µ–º/–æ—Ç–∫–ª—é—á–∞–µ–º –≤—ã–±–æ—Ä –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
            self.loader_version_combo.setEnabled(loader_type != "vanilla")

            # –ó–∞–ø–æ–ª–Ω—è–µ–º –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
            if loader_type == "forge":
                self.loader_version_combo.clear()
                forge_versions = ["47.2.0", "47.1.0", "46.0.14"]  # –ü—Ä–∏–º–µ—Ä –≤–µ—Ä—Å–∏–π
                self.loader_version_combo.addItems(forge_versions)
            elif loader_type == "fabric":
                self.loader_version_combo.clear()
                fabric_versions = ["0.14.21", "0.14.20", "0.14.19"]  # –ü—Ä–∏–º–µ—Ä –≤–µ—Ä—Å–∏–π
                self.loader_version_combo.addItems(fabric_versions)
            else:
                self.loader_version_combo.clear()

    def _on_memory_changed(self, value: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ –ø–∞–º—è—Ç–∏"""
        gb_value = value / 1024
        self.memory_label.setText(f"–í—ã–¥–µ–ª—è–µ–º–∞—è –ø–∞–º—è—Ç—å: {gb_value:.1f} GB")
        self.max_memory_spinbox.setValue(value)

    def _on_max_memory_changed(self, value: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏ –≤ spinbox"""
        self.memory_slider.setValue(value)
        self._on_memory_changed(value)

    def _on_fullscreen_changed(self, checked: bool):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
        self.resolution_container.setEnabled(not checked)

    def _set_resolution(self, width: int, height: int):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è"""
        self.width_spinbox.setValue(width)
        self.height_spinbox.setValue(height)

    def _browse_game_directory(self):
        """–í—ã–±–æ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏–≥—Ä—ã"""
        dir_path = QFileDialog.getExistingDirectory(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∏–≥—Ä—ã",
            self.game_dir_input.text() or self.paths.minecraft_dir
        )

        if dir_path:
            self.game_dir_input.setText(dir_path)

    def _browse_java_path(self):
        """–í—ã–±–æ—Ä –ø—É—Ç–∏ –∫ Java"""
        file_path, _ = QFileDialog.getOpenFileName(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª Java",
            "",
            "–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã (*.exe);;–í—Å–µ —Ñ–∞–π–ª—ã (*.*)" if os.name == 'nt' else "–í—Å–µ —Ñ–∞–π–ª—ã (*.*)"
        )

        if file_path:
            self.java_path_input.setText(file_path)

    def _get_group_style(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è QGroupBox"""
        return f"""
            QGroupBox {{
                color: {COLORS['text_primary']};
                background-color: {COLORS['bg_secondary']};
                border: 1px solid {COLORS['border_light']};
                border-radius: {UI['border_radius']}px;
                font-size: {FONTS['sizes']['large']}px;
                font-weight: bold;
                margin-top: 8px;
                padding-top: 8px;
            }}
            QGroupBox::title {{
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 10px 0 10px;
                color: {COLORS['accent_primary']};
                background-color: {COLORS['bg_secondary']};
            }}
        """

    def _get_input_style(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞"""
        return f"""
            QLineEdit {{
                background-color: {COLORS['bg_primary']};
                border: 1px solid {COLORS['border_light']};
                border-radius: 6px;
                padding: 8px 12px;
                color: {COLORS['text_primary']};
            }}
            QLineEdit:focus {{
                border: 2px solid {COLORS['accent_primary']};
            }}
        """

    def _get_combo_style(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –∫–æ–º–±–æ–±–æ–∫—Å–æ–≤"""
        return f"""
            QComboBox {{
                background-color: {COLORS['bg_primary']};
                border: 1px solid {COLORS['border_light']};
                border-radius: 6px;
                padding: 8px 12px;
                color: {COLORS['text_primary']};
            }}
            QComboBox:focus {{
                border: 2px solid {COLORS['accent_primary']};
            }}
            QComboBox::drop-down {{
                border: none;
            }}
            QComboBox QAbstractItemView {{
                background-color: {COLORS['bg_tertiary']};
                border: 1px solid {COLORS['border_light']};
                selection-background-color: {COLORS['accent_primary']};
            }}
        """

    def _get_checkbox_style(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤"""
        return f"""
            QCheckBox {{
                color: {COLORS['text_primary']};
                font-size: {FONTS['sizes']['normal']}px;
                spacing: 8px;
            }}
            QCheckBox::indicator {{
                width: 18px;
                height: 18px;
                border-radius: 4px;
                border: 2px solid {COLORS['text_secondary']};
                background-color: transparent;
            }}
            QCheckBox::indicator:hover {{
                border: 2px solid {COLORS['text_primary']};
            }}
            QCheckBox::indicator:checked {{
                background-color: {COLORS['accent_primary']};
                border: 2px solid {COLORS['accent_primary']};
            }}
        """

# –†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π —Å–æ–∑–¥–∞–Ω —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º –¥–ª—è –Æ—Ä–∞
