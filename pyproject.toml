[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "suplauncher"
version = "1.0.0"
description = "Современный Minecraft лаунчер с минималистичным дизайном"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "SUP Team", email = "support@villadesup.ru"}
]
maintainers = [
    {name = "SUP Team", email = "support@villadesup.ru"}
]
keywords = ["minecraft", "launcher", "gaming", "mods", "forge", "fabric"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Games/Entertainment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: X11 Applications :: Qt",
    "Natural Language :: Russian",
    "Natural Language :: English"
]

dependencies = [
    "PySide6>=6.5.0",
    "minecraft-launcher-lib>=6.0",
    "requests>=2.28.0",
    "pillow>=10.0.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "qasync>=0.24.0",
    "cryptography>=41.0.0",
    "appdirs>=1.4.4",
    "python-dotenv>=1.0.0",
    "random-username>=1.0.2",
    "psutil>=5.9.0",
    "python-dateutil>=2.8.2",
    "jsonschema>=4.17.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-qt>=4.2.0",
    "pre-commit>=3.0.0",
    "flake8>=6.0.0",
    "coverage>=7.0.0",
    "pytest-cov>=4.1.0"
]

build = [
    "pyinstaller>=5.13.0",
    "pillow>=10.0.0",
    "wheel>=0.41.0"
]

test = [
    "pytest>=7.4.0",
    "pytest-qt>=4.2.0",
    "pytest-cov>=4.1.0",
    "coverage>=7.0.0"
]

[project.urls]
Homepage = "https://villadesup.ru"
Documentation = "https://github.com/yourusername/suplauncher/wiki"
Repository = "https://github.com/yourusername/suplauncher"
"Bug Tracker" = "https://github.com/yourusername/suplauncher/issues"
Changelog = "https://github.com/yourusername/suplauncher/blob/main/CHANGELOG.md"

[project.scripts]
suplauncher = "main:main"

[project.gui-scripts]
suplauncher-gui = "main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.qss", "*.json", "*.txt", "*.md"]
"assets" = ["**/*"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "minecraft_launcher_lib.*",
    "random_username.*",
    "qasync.*"
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ui: marks tests as UI tests"
]

# coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

# flake8 configuration
[tool.flake8]
max-line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".mypy_cache"
]
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "E501"   # line too long (handled by black)
]
per-file-ignores = [
    "__init__.py:F401"
]

# Конфигурация проекта настроена для Юра